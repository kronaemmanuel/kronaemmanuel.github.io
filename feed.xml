<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-09-01T04:05:54+05:00</updated><id>/feed.xml</id><entry><title type="html">Making A Simple Animation In Liquid</title><link href="/2021/09/01/making-a-simple-animation-in-liquid.html" rel="alternate" type="text/html" title="Making A Simple Animation In Liquid" /><published>2021-09-01T00:00:00+05:00</published><updated>2021-09-01T00:00:00+05:00</updated><id>/2021/09/01/making-a-simple-animation-in-liquid</id><content type="html" xml:base="/2021/09/01/making-a-simple-animation-in-liquid.html">&lt;p&gt;I was going to write a post about how great &lt;a href=&quot;https://github.com/tailwindlabs/tailwindcss-typography&quot;&gt;Tailwind Typography&lt;/a&gt; is because all I had to do to style my website was add two classes:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class&quot;prose prose-red&quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But after doing that little bit of work, I thought to myself:
“Oh, let’s make a “loading…” bouncing text animation for my website since a lot of stuff is still work in progress”&lt;/p&gt;

&lt;p&gt;Seems pretty simple right? Wrong.&lt;/p&gt;

&lt;p&gt;It would have been wayyyyy more simpler had I been using some other framework, but since this is Jekyll, which uses Liquid, it was much harder than it should have been. There are two main factors for this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Finding documentation for liquid is much harder than for regular languages. I had to resort to guides and answers written for Shopify users to find my answers. The official documentation is really bad.&lt;/li&gt;
  &lt;li&gt;I have no idea how to include javascript or css right into my main file. I know they had &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;script&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;style&lt;/code&gt; tags in shopify, but those dont work in Jekyll&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can checkout &lt;a href=&quot;https://github.com/kronaemmanuel/kronaemmanuel.github.io/commit/1a4acbb48e656c0320912202f66272800a73b193&quot;&gt;this commit&lt;/a&gt; to checkout the liquid code which splits a word into letters, then applies a dynamic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;animation-duration&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;animation-delay&lt;/code&gt; to each letter.&lt;/p&gt;

&lt;p&gt;and here’s the final result:&lt;/p&gt;

&lt;div class=&quot;bouncing justify-center text-red-600 font-press-start&quot;&gt;
  
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 0s; animation-duration: 2.3s&quot;&gt;B&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 0.2s; animation-duration: 2.3s&quot;&gt;l&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 0.4s; animation-duration: 2.3s&quot;&gt;a&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 0.6s; animation-duration: 2.3s&quot;&gt;B&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 0.8s; animation-duration: 2.3s&quot;&gt;l&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 1.0s; animation-duration: 2.3s&quot;&gt;a&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 1.2s; animation-duration: 2.3s&quot;&gt;B&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 1.4s; animation-duration: 2.3s&quot;&gt;l&lt;/div&gt;
    
  
    &lt;div class=&quot;bouncing_letter&quot; style=&quot;animation-delay: 1.6s; animation-duration: 2.3s&quot;&gt;a&lt;/div&gt;
    
  
&lt;/div&gt;

&lt;p&gt;and if you aren’t reading this post too much in the future, you might see a similar animation down below, don’t worry, it will be removed soon enough.&lt;/p&gt;</content><author><name>krona</name></author><summary type="html">I was going to write a post about how great Tailwind Typography is because all I had to do to style my website was add two classes: &amp;lt;div class&quot;prose prose-red&quot;&amp;gt; &amp;lt;/div&amp;gt;</summary></entry><entry><title type="html">Making Github Actions Work</title><link href="/2021/08/26/making-github-actions-work.html" rel="alternate" type="text/html" title="Making Github Actions Work" /><published>2021-08-26T00:00:00+05:00</published><updated>2021-08-26T00:00:00+05:00</updated><id>/2021/08/26/making-github-actions-work</id><content type="html" xml:base="/2021/08/26/making-github-actions-work.html">&lt;p&gt;After finishing my tailwind blogpost yesterday, I realized that it didn’t actually publish and that my github action setup to deploy the websitewasn’t working. I had followed the &lt;a href=&quot;https://jekyllrb.com/docs/continuous-integration/github-actions/&quot;&gt;guide&lt;/a&gt; on Jekyll’s own website to make the github action, but it wasn’t working.&lt;/p&gt;

&lt;p&gt;I quickly realized that the action I had created didn’t support npm or Node. So I had to set that up myself, after trying it and failing too many times, I finally hit a vein of gold. I found this &lt;a href=&quot;https://githubmemory.com/repo/mhanberg/jekyll-postcss/issues/20&quot;&gt;issue&lt;/a&gt; by a lovely person named DavidUnzue. He was facing the exact same issue that I was facing, so I’m not describe the issue in detail here. Anyways, someone else and him had figured out how to solve it. And I followed his advice of using a &lt;a href=&quot;https://github.com/limjh16/jekyll-action-ts&quot;&gt;different&lt;/a&gt; github action and also running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt; before it. And voila! My &lt;a href=&quot;https://github.com/kronaemmanuel/kronaemmanuel.github.io/actions/runs/1168075987&quot;&gt;github action&lt;/a&gt; started working! You can check out the github action history before the linked action to see all the times I failed. 15 times to be exact.&lt;/p&gt;

&lt;p&gt;Anyways, I realized that I had much to learn about github actions, and even more to learn about docker.&lt;/p&gt;</content><author><name>krona</name></author><summary type="html">After finishing my tailwind blogpost yesterday, I realized that it didn’t actually publish and that my github action setup to deploy the websitewasn’t working. I had followed the guide on Jekyll’s own website to make the github action, but it wasn’t working.</summary></entry><entry><title type="html">Tailwind Blunders</title><link href="/2021/08/25/tailwind-blunders.html" rel="alternate" type="text/html" title="Tailwind Blunders" /><published>2021-08-25T00:00:00+05:00</published><updated>2021-08-25T00:00:00+05:00</updated><id>/2021/08/25/tailwind-blunders</id><content type="html" xml:base="/2021/08/25/tailwind-blunders.html">&lt;p&gt;So I’m trying to setup my tailwindcss to work properly and I’m constantly getting this error:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  Conversion error: Jekyll::Converters::Scss encountered an error while converting &apos;assets/css/styles.scss&apos;:
  Error: unterminated attribute selector for type on line 632:16 of styles.scss &amp;gt;&amp;gt; .prose ol[type=&quot;A&quot; s] { ---------------^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I wasn’t sure why I was getting this error. But then I compared my code to the repo of the guide I was following to do this by &lt;a href=&quot;https://katiekodes.com/jekyll-tailwind&quot;&gt;Katie Kodes&lt;/a&gt;. I realized that the Katie was importing the tailwind styles into a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.css&lt;/code&gt; file while I was doing it in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.scss&lt;/code&gt;. So I changed my extension from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.scss&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.css&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Also, I found this &lt;a href=&quot;https://stackoverflow.com/questions/68898511/tailwindcss-typography-sasscsyntaxerror-error-unterminated-attribute-select/68898512#68898512&quot;&gt;Stack Overflow issue&lt;/a&gt; which was the same as mine. The guy who wrote the question answered his own question and reasoned that “this new syntax for CSS rules is not supported by libsass / sassc.” so hence the error.&lt;/p&gt;

&lt;p&gt;Well, I tried to understand what this meant and found this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;I thought that the issue was with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[type=&quot;A&quot; s]&lt;/code&gt; part, maybe that was something new in the CSS Spec (I haven’t seen this syntax before). And maybe this wasn’t handled by Scss yet. However, the CSS attribute selector of the type: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.prose ol[type=&quot;A&quot; s]&lt;/code&gt; have been around since 2018. These &lt;a href=&quot;https://www.w3.org/TR/selectors-4/&quot;&gt;specs&lt;/a&gt; were last updated in 2018. So I guess it’s not that issue.&lt;/li&gt;
  &lt;li&gt;I also created a &lt;a href=&quot;https://codepen.io/StoryMode/pen/XWgJmrj&quot;&gt;Codepen&lt;/a&gt; to see if Scss created this error in a setup other than Jekyll. I set SCSS as my CSS preprocessor in it. However, it didn’t cause any errors, and worked.&lt;/li&gt;
  &lt;li&gt;The Stack Overflow guy had mentioned “libsass” and “sassc”. I found that LibSass was &lt;a href=&quot;https://sass-lang.com/blog/libsass-is-deprecated&quot;&gt;deprecated&lt;/a&gt; from the Sass’s blog. Also found that they now use Dart Sass, which was surprising to me, I didn’t know that Sass was using Dart. Go Dart!&lt;/li&gt;
  &lt;li&gt;Another thing that made me curious is that the error is about the selector being unterminated. I switched the preprocessor in my Codepen from &lt;a href=&quot;https://codepen.io/StoryMode/pen/OJgPyyd&quot;&gt;Scss to Sass&lt;/a&gt;, and it gave me an error, that it was expecting a end of line. Ofcourse it did, Sass does away with the squiggly braces, so ofcourse it gave me that error. Which makes me think, does jekyll use Sass or does it use Scss? 🤔 In the error message I see that the error is created by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jekyll::Converters:Scss&lt;/code&gt; which I guess means that its an Scss compiler, but then why would it not parse valid CSS code. Anywho, that’s as far as I’m gonna pursue this. Its late, I should be asleep by now.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Edit: Nevermind I found the reason why this wasn’t working. You can read all about it &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/issues/120#issuecomment-889739369&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content><author><name>krona</name></author><summary type="html">So I’m trying to setup my tailwindcss to work properly and I’m constantly getting this error: Conversion error: Jekyll::Converters::Scss encountered an error while converting &apos;assets/css/styles.scss&apos;: Error: unterminated attribute selector for type on line 632:16 of styles.scss &amp;gt;&amp;gt; .prose ol[type=&quot;A&quot; s] { ---------------^</summary></entry></feed>